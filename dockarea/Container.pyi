from ..Qt import QtWidgets
from _typeshed import Incomplete

__all__ = ['Container', 'HContainer', 'VContainer', 'TContainer']

class Container:
    area: Incomplete
    stretches: Incomplete
    def __init__(self, area) -> None: ...
    def container(self): ...
    def containerChanged(self, c) -> None: ...
    def type(self) -> None: ...
    def insert(self, new, pos: Incomplete | None = None, neighbor: Incomplete | None = None) -> None: ...
    def apoptose(self, propagate: bool = True) -> None: ...
    def close(self) -> None: ...
    def childEvent_(self, ev) -> None: ...
    def childStretchChanged(self) -> None: ...
    def setStretch(self, x: Incomplete | None = None, y: Incomplete | None = None) -> None: ...
    def updateStretch(self) -> None: ...
    def stretch(self):
        """Return the stretch factors for this container"""

class SplitContainer(Container, QtWidgets.QSplitter):
    """Horizontal or vertical splitter with some changes:
     - save/restore works correctly
    """
    sigStretchChanged: Incomplete
    def __init__(self, area, orientation) -> None: ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
    def childEvent(self, ev) -> None: ...

class HContainer(SplitContainer):
    def __init__(self, area) -> None: ...
    def type(self): ...
    def updateStretch(self) -> None: ...

class VContainer(SplitContainer):
    def __init__(self, area) -> None: ...
    def type(self): ...
    def updateStretch(self) -> None: ...

class StackedWidget(QtWidgets.QStackedWidget):
    container: Incomplete
    def __init__(self, *, container) -> None: ...
    def childEvent(self, ev) -> None: ...

class TContainer(Container, QtWidgets.QWidget):
    sigStretchChanged: Incomplete
    layout: Incomplete
    hTabLayout: Incomplete
    hTabBox: Incomplete
    stack: Incomplete
    def __init__(self, area) -> None: ...
    def tabClicked(self, tab, ev: Incomplete | None = None) -> None: ...
    def raiseDock(self, dock) -> None:
        """Move *dock* to the top of the stack"""
    def type(self): ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
    def updateStretch(self) -> None: ...
